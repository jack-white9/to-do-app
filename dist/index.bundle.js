(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(15),r=t.n(o),i=t(645),A=t.n(i),a=t(667),d=t.n(a),c=new URL(t(239),t.b),s=A()(r()),l=d()(c);s.push([n.id,"@font-face {\n    font-family: 'Roboto';\n    src: url("+l+");\n}\n\n*{\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\nbody {\n    font-family: 'Roboto', sans-serif;\n    color: white;\n}\n\nwrapper {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: 1fr;\n    height: 100vh;\n}\n\n.projectContainer {\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    background-color: #333332;\n    z-index: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 5vh 3vw;\n}\n\n.projectHeader {\n    color: #BB86FC;\n    font-size: 4vw;\n    font-weight: 100;\n    margin-bottom: 1vh;\n}\n\n.projectDivider {\n    border-top: 1px solid white;\n    width: 100%;\n}\n\n.projects {\n    font-size: 2vw;\n    padding-top: 0.5em;\n    padding-left: 0.25em;\n    border-radius: 10px;\n    vertical-align: middle;\n}\n\n.projects:hover {\n    background-color: #393938;\n    cursor: pointer;\n}\n\n.addProject {\n    color: #BB86FC;\n\n}\n\n.tasksContainer {\n    background-color: #393938;\n    z-index: 0;\n    display: flex;\n    flex-direction: column;\n    padding: 5vh 3vw;\n}\n\n.tasksHeaderContainer {\n    display: grid;\n    grid-template-columns: 5fr 1fr;\n}\n\n.tasksHeader {\n    color: #BB86FC;\n    font-size: 4vw;\n    font-weight: 100;\n    margin-bottom: 1vh;\n}\n\n.edit {\n    justify-self: end;\n    align-self: end;\n    margin-bottom: 1vh;\n}\n\n.edit:hover {\n    color: #BB86FC;\n    cursor: pointer;\n}\n\n.tasksDivider {\n    border-top: 1px solid white;\n    width: 100%;\n}\n\n.tasksSubheader {\n    padding-top: 0.5em;\n    padding-bottom: 0.5em;\n    font-size: 2vw;\n    font-weight: 100;\n}\n\n.todoContainer {\n    font-size: 2vw;\n    padding: 8px;\n    margin: 0.25em 0;\n\n    display: grid;\n    grid-template-columns: 1fr 10fr 3fr;\n    \n    border: 2px solid white;\n    border-radius: 10px;\n}\n\n.todoContainer:hover {\n    background-color: #525252;\n    cursor: pointer;\n}\n\n.circle {\n    height: 0.75em;\n    width: 0.75em;\n    border: 2px solid white;\n    border-radius: 50%;\n    margin: 0.25em 0.4em;\n}\n\n.todoTime {\n    justify-self: end;\n    align-self: center;\n    padding-right: 0.4em;\n    font-size: 1vw;\n}\n\n.addTask {\n    color: #BB86FC;\n    padding-top: 0.5em;\n    padding-right: 0.5em;\n    text-align: end;\n    font-size: 2vw;\n    border-radius: 10px;\n}\n\n.addTask:hover {\n    background-color: #525252;\n    cursor: pointer;\n}\n\n.darkOverlay {\n    position: fixed;\n    z-index: 2;\n    background-color: rgba(23, 23, 23, 0.829);\n    top: 0;\n    left: 0;\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.popupContainer {\n    position: fixed;\n    z-index: 3;\n    background-color: #393938;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n    border-radius: 10px;\n    color: white;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.exitPopup {\n    position: absolute;\n    top: 1vh;\n    right: 2vw;\n}\n\n.exitPopup:hover {\n    cursor: pointer;\n}\n\n.popupHeading {\n    text-align: center;\n    margin: 0 auto 0 auto;\n}\n\n.taskForm, .timeForm {\n    font-family: 'Roboto', sans-serif;\n    margin: 1.5vh 10vw 1.5vh 10vw;\n    height: 10%;\n    border-radius: 10px;\n    border: 0.1em solid #393938;\n    padding: 0 0.5vw 0 0.5vw;\n}\n\n.taskForm:focus, .timeForm:focus {\n    outline: none;\n}\n\n.confirmForms {\n    margin-top: 1.5vh;\n    height: 10%;\n    background-color: #BB86FC;\n    color: white;\n    border: 0.1em solid #BB86FC;\n    border-radius: 10px;\n    align-self: center;\n}\n\n@media (max-width: 600px) { /* mobile only */\n    .popupContainer {\n        width: 80vw;\n        height: 60vh;\n    }\n\n    .popupHeading {\n        font-size: 8vw;\n    }\n\n    .confirmForms {\n        width: 30%;\n    }\n\n    .exitPopup {\n        font-size: 8vw;\n    }\n}\n\n@media (min-width: 601px) { /* pc and tablet only */\n    .popupContainer {\n        width: 40vw;\n        height: 40vh;\n    }\n\n    .popupHeading {\n        font-size: 3vw;\n    }\n\n    .confirmForms {\n        width: 10%;\n    }\n\n    .exitPopup {\n        font-size: 3vw;\n    }\n}\n\n.confirmForms:hover {\n    background-color: white;\n    color: #BB86FC;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url('./Roboto-Light.ttf');\n}\n\n*{\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\nbody {\n    font-family: 'Roboto', sans-serif;\n    color: white;\n}\n\nwrapper {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: 1fr;\n    height: 100vh;\n}\n\n.projectContainer {\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    background-color: #333332;\n    z-index: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 5vh 3vw;\n}\n\n.projectHeader {\n    color: #BB86FC;\n    font-size: 4vw;\n    font-weight: 100;\n    margin-bottom: 1vh;\n}\n\n.projectDivider {\n    border-top: 1px solid white;\n    width: 100%;\n}\n\n.projects {\n    font-size: 2vw;\n    padding-top: 0.5em;\n    padding-left: 0.25em;\n    border-radius: 10px;\n    vertical-align: middle;\n}\n\n.projects:hover {\n    background-color: #393938;\n    cursor: pointer;\n}\n\n.addProject {\n    color: #BB86FC;\n\n}\n\n.tasksContainer {\n    background-color: #393938;\n    z-index: 0;\n    display: flex;\n    flex-direction: column;\n    padding: 5vh 3vw;\n}\n\n.tasksHeaderContainer {\n    display: grid;\n    grid-template-columns: 5fr 1fr;\n}\n\n.tasksHeader {\n    color: #BB86FC;\n    font-size: 4vw;\n    font-weight: 100;\n    margin-bottom: 1vh;\n}\n\n.edit {\n    justify-self: end;\n    align-self: end;\n    margin-bottom: 1vh;\n}\n\n.edit:hover {\n    color: #BB86FC;\n    cursor: pointer;\n}\n\n.tasksDivider {\n    border-top: 1px solid white;\n    width: 100%;\n}\n\n.tasksSubheader {\n    padding-top: 0.5em;\n    padding-bottom: 0.5em;\n    font-size: 2vw;\n    font-weight: 100;\n}\n\n.todoContainer {\n    font-size: 2vw;\n    padding: 8px;\n    margin: 0.25em 0;\n\n    display: grid;\n    grid-template-columns: 1fr 10fr 3fr;\n    \n    border: 2px solid white;\n    border-radius: 10px;\n}\n\n.todoContainer:hover {\n    background-color: #525252;\n    cursor: pointer;\n}\n\n.circle {\n    height: 0.75em;\n    width: 0.75em;\n    border: 2px solid white;\n    border-radius: 50%;\n    margin: 0.25em 0.4em;\n}\n\n.todoTime {\n    justify-self: end;\n    align-self: center;\n    padding-right: 0.4em;\n    font-size: 1vw;\n}\n\n.addTask {\n    color: #BB86FC;\n    padding-top: 0.5em;\n    padding-right: 0.5em;\n    text-align: end;\n    font-size: 2vw;\n    border-radius: 10px;\n}\n\n.addTask:hover {\n    background-color: #525252;\n    cursor: pointer;\n}\n\n.darkOverlay {\n    position: fixed;\n    z-index: 2;\n    background-color: rgba(23, 23, 23, 0.829);\n    top: 0;\n    left: 0;\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.popupContainer {\n    position: fixed;\n    z-index: 3;\n    background-color: #393938;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n    border-radius: 10px;\n    color: white;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.exitPopup {\n    position: absolute;\n    top: 1vh;\n    right: 2vw;\n}\n\n.exitPopup:hover {\n    cursor: pointer;\n}\n\n.popupHeading {\n    text-align: center;\n    margin: 0 auto 0 auto;\n}\n\n.taskForm, .timeForm {\n    font-family: 'Roboto', sans-serif;\n    margin: 1.5vh 10vw 1.5vh 10vw;\n    height: 10%;\n    border-radius: 10px;\n    border: 0.1em solid #393938;\n    padding: 0 0.5vw 0 0.5vw;\n}\n\n.taskForm:focus, .timeForm:focus {\n    outline: none;\n}\n\n.confirmForms {\n    margin-top: 1.5vh;\n    height: 10%;\n    background-color: #BB86FC;\n    color: white;\n    border: 0.1em solid #BB86FC;\n    border-radius: 10px;\n    align-self: center;\n}\n\n@media (max-width: 600px) { /* mobile only */\n    .popupContainer {\n        width: 80vw;\n        height: 60vh;\n    }\n\n    .popupHeading {\n        font-size: 8vw;\n    }\n\n    .confirmForms {\n        width: 30%;\n    }\n\n    .exitPopup {\n        font-size: 8vw;\n    }\n}\n\n@media (min-width: 601px) { /* pc and tablet only */\n    .popupContainer {\n        width: 40vw;\n        height: 40vh;\n    }\n\n    .popupHeading {\n        font-size: 3vw;\n    }\n\n    .confirmForms {\n        width: 10%;\n    }\n\n    .exitPopup {\n        font-size: 3vw;\n    }\n}\n\n.confirmForms:hover {\n    background-color: white;\n    color: #BB86FC;\n}\n"],sourceRoot:""}]);const p=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,o){"string"==typeof n&&(n=[[null,n,""]]);var r={};if(o)for(var i=0;i<this.length;i++){var A=this[i][0];null!=A&&(r[A]=!0)}for(var a=0;a<n.length;a++){var d=[].concat(n[a]);o&&r[d[0]]||(t&&(d[2]?d[2]="".concat(t," and ").concat(d[2]):d[2]=t),e.push(d))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}n.exports=function(n){var t,o,r=(o=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var o,r,i=[],A=!0,a=!1;try{for(t=t.call(n);!(A=(o=t.next()).done)&&(i.push(o.value),!e||i.length!==e);A=!0);}catch(n){a=!0,r=n}finally{try{A||null==t.return||t.return()}finally{if(a)throw r}}return i}}(t,o)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var o=Object.prototype.toString.call(n).slice(8,-1);return"Object"===o&&n.constructor&&(o=n.constructor.name),"Map"===o||"Set"===o?Array.from(n):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?e(n,t):void 0}}(t,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=r[1],A=r[3];if(!A)return i;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(A)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),c="/*# ".concat(d," */"),s=A.sources.map((function(n){return"/*# sourceURL=".concat(A.sourceRoot||"").concat(n," */")}));return[i].concat(s).concat([c]).join("\n")}return[i].join("\n")}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},A=[],a=0;a<n.length;a++){var d=n[a],c=o.base?d[0]+o.base:d[0],s=i[c]||0,l="".concat(c," ").concat(s);i[c]=s+1;var p=t(l),u={css:d[1],media:d[2],sourceMap:d[3]};-1!==p?(e[p].references++,e[p].updater(u)):e.push({identifier:l,updater:r(u,o),references:1}),A.push(l)}return A}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=t(i[A]);e[a].references--}for(var d=o(n,r),c=0;c<i.length;c++){var s=t(i[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o=t.css,r=t.media,i=t.sourceMap;r?n.setAttribute("media",r):n.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},239:(n,e,t)=>{n.exports=t.p+"8be2d1487420548b3b8d.ttf"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{class n{constructor(n){this.name=n}}var e=t(379),o=t.n(e),r=t(795),i=t.n(r),A=t(569),a=t.n(A),d=t(565),c=t.n(d),s=t(216),l=t.n(s),p=t(589),u=t.n(p),m=t(426),C={};C.styleTagTransform=u(),C.setAttributes=c(),C.insert=a().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=l(),o()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals,function(){const n=document.createElement("wrapper");document.body.appendChild(n);const e=document.createElement("container");e.classList.add("projectContainer"),n.appendChild(e);const t=document.createElement("container");t.classList.add("tasksContainer"),n.appendChild(t);const o=document.createElement("h1");o.classList.add("projectHeader"),o.innerHTML="Projects",e.append(o);const r=document.createElement("hr");r.classList.add("projectDivider"),e.append(r);const i=document.createElement("p");i.classList.add("projects"),i.innerHTML="Homework",e.append(i);const A=document.createElement("p");A.classList.add("projects"),A.innerHTML="Chores",e.append(A);const a=document.createElement("p");a.classList.add("projects"),a.innerHTML="Charity",e.append(a);const d=document.createElement("p");d.classList.add("projects"),d.innerHTML="Work",e.append(d);const c=document.createElement("p");c.classList.add("projects"),c.classList.add("addProject"),c.innerHTML="+ Add Project",e.append(c);const s=document.createElement("container");s.classList.add("tasksHeaderContainer"),t.appendChild(s);const l=document.createElement("h1");l.classList.add("tasksHeader"),l.innerHTML="Chores",s.appendChild(l);const p=document.createElement("p");p.classList.add("edit"),p.innerHTML="Edit",s.appendChild(p);const u=document.createElement("hr");u.classList.add("tasksDivider"),t.appendChild(u);const m=document.createElement("h2");m.classList.add("tasksSubheader"),m.innerHTML="I have to do these to keep the house tidy.",t.appendChild(m);const C=document.createElement("container");C.classList.add("todoContainer"),t.appendChild(C);const B=document.createElement("span");B.classList.add("circle"),C.appendChild(B);const h=document.createElement("p");h.classList.add("todoText"),h.innerHTML="Vacuum the floor",C.appendChild(h);const f=document.createElement("container");f.classList.add("todoContainer"),t.appendChild(f);const I=document.createElement("span");I.classList.add("circle"),f.appendChild(I);const g=document.createElement("p");g.classList.add("todoText"),g.innerHTML="Do the dishes",f.appendChild(g);const v=document.createElement("container");v.classList.add("todoContainer"),t.appendChild(v);const b=document.createElement("span");b.classList.add("circle"),v.appendChild(b);const w=document.createElement("p");w.classList.add("todoText"),w.innerHTML="This is a really long task that gets cut off ear...",v.appendChild(w);const x=document.createElement("container");x.classList.add("todoContainer"),t.appendChild(x);const y=document.createElement("span");y.classList.add("circle"),x.appendChild(y);const E=document.createElement("p");E.classList.add("todoText"),E.innerHTML="Fold the washing",x.appendChild(E);const k=document.createElement("p");k.classList.add("addTask"),k.innerHTML="+ Add Task",t.appendChild(k);const L=document.querySelector(".addTask"),j=document.createElement("p");j.classList.add("exitPopup"),j.innerHTML="×";const T=document.createElement("div");T.classList.add("darkOverlay");const z=document.createElement("container");z.classList.add("popupContainer");const F=document.createElement("p");F.classList.add("popupHeading"),F.innerHTML="Add your task";const H=document.createElement("input");H.setAttribute("type","text"),H.setAttribute("placeholder","What is your task?"),H.classList.add("taskForm");const M=document.createElement("button");M.classList.add("confirmForms"),M.innerHTML="Add Task",L.addEventListener("click",(()=>{document.body.appendChild(T),T.appendChild(z),z.appendChild(j),z.appendChild(F),z.appendChild(H),z.appendChild(M)})),j.addEventListener("click",(()=>{document.body.removeChild(T)}))}(),function(){const e=document.querySelector(".confirmForms");console.log(e),console.log(new n("hello"))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,